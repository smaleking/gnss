==========================================================================================
01-08-2017

Abandon the idea of adding more taps. Delete the branch multiple taps. 
The current implementation has intrinsic limitations of adding new taps.

Work on bit sync. It should be run inside tracking loop.

1. add Bits and BitFlipCnt[20]; initialize them
2. add tracking state
	1. pulling
	2. bit-sync  

==========================================================================================
01-09-2017

1 frame = 5 subframes 
1 subframe = 10 words 
1 word  = 30 bits = 6s
Subframe 1, 2, 3 consists of the ephemeris and clock information
Subframe 4, 5 are almanac
The first 2 words of each subframe are always TLW and HOW.

The first 8 bits of TLW is 0x8b or 0x74, used for sub-frame sync.
The second word is HOW. It contains Z-count and subframe number(0-4).

frame sync has to satisfy 3 requirement
1. found preamble in the subframe
2. found preamble in next subframe
3. TOW_next = TOW_curr + 1; Need to consider roll-over problem (100799 and then 0).


To do frame sync, we save two subframes, 20 words.



==========================================================================================
03-12-2017

Current status: 
	one channel tracking/bit sync/frame sync/tranmission time is done.
	In windows, vs project is automatically generated with CMakeLists.txt.
				
TODO: 
	1. Optimize tracking strucure. the local code generator is not efficient.
	2. Multiple channel test.
				
Details:

1. In tm_proc(), if there is an acquisition result from am thread, we need to 
   initialize a Channel object. This activity should be wrapped by a function. 
   
2. Move rxceiver clock out from channel tracking

3. Test different PRNs, but the PLL seems not tolerant to frequency offset.

4. Got 6 measurements from PRN 2, 5, 13, 20, 25, 29 and have them in logged files.


==========================================================================================
03-13-2017

TODO:
1. Acquisition result is not accurate enough, need to do fine search
2. The pull-in range of PLL is not good enough, need FLL + Costas
3. After bit sync, we need to do 20ms loop update
4. Need C/No estimator 
5. Design tracking loop transition logic (FLL->PLL->Bit Sync->Frame Sync ->FLL -> Lost Lock)
6. Do we need Kalman filter for tracking loops?

Through simulation, the initial frequency offset must be < 100 Hz to be within the pull-in range of PLL.

==========================================================================================
03-14-2017

TODO:

1. After acquisition, the channel state should be FLL/PLL_W/PLL_N

